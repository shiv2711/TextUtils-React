{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/About.js","components/Alert.js","components/Contact.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","useState","color","backgroundColor","border","myStyle","setMyStyle","className","id","src","alt","to","title","style","abouttxt","onClick","span","document","getElementById","left","toggleMode","TextForm","text","setText","heading","name","value","onChange","event","target","rows","disabled","length","mode","newText","toUpperCase","showAlert","toLowerCase","navigator","clipboard","writeText","split","join","trim","filter","element","replace","toFixed","About","Alert","height","alert","type","word","lower","charAt","slice","capitalize","msg","setAlert","Contact","action","htmlFor","placeholder","cols","margin","defaultProps","Footer","App","setMode","message","setTimeout","body","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f8a1194c.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n\r\n    const [myStyle, setMyStyle] = useState({\r\n            color: '#331515',\r\n            backgroundColor: '#d0adad',\r\n            border: '2px solid #270707' \r\n    });\r\n\r\n    const toggle_light_mode = ()=> {\r\n        let span = document.getElementById('span');\r\n        if(span.style.left === '38px') {\r\n            span.style.left = '5px';\r\n            setMyStyle({\r\n                color: '#331515',\r\n                backgroundColor: '#d0adad',\r\n                border: '2px solid #270707' \r\n            });\r\n            // document.title = \"TextUtil - LightMode\";\r\n        }\r\n        else {\r\n            span.style.left = '38px';\r\n            setMyStyle({\r\n                color: '#a88787',\r\n                border: '2px solid #542626',\r\n                backgroundColor: '#3719199c'\r\n            });\r\n            // document.title = \"TextUtil - DarkMode\";\r\n        }\r\n        props.toggleMode();\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n        <div className=\"navbar\" id=\"navbar\" >\r\n            <div className=\"logo\">\r\n                <img className=\"img\" src=\"./logo1.png\" alt=\"LOGO\"/>\r\n            </div>\r\n            <Link to=\"/\" className=\"appname\" >{props.title} </Link>\r\n            <Link to=\"/\" className=\"field\" style={myStyle}>HOME</Link>\r\n            {/* <Link to=\"/\" className=\"field\" style={myStyle}>BLOG</Link> */}\r\n            <Link to=\"/About\" className=\"field\" style={myStyle}>{props.abouttxt}</Link>\r\n            <Link to=\"/Contact\" className=\"field\" style={myStyle}>CONTACT</Link>\r\n            {/* <Link to=\"/\" className=\"field\" style={myStyle}>LOCATION</Link> */}\r\n            {/* <input className=\"search\" id=\"searchTxt\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n            <button className=\"searchbtn\" type=\"submit\">SEARCH</button> */}\r\n            <div className=\"tglBtn\">\r\n\t            <button className=\"light-mode-button\" id=\"tlgBtn\" aria-label=\"Toggle Light Mode\" onClick={toggle_light_mode}>\r\n\t                <span></span>\r\n\t                <span id='span'></span>\r\n\t            </button> \r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nNavbar.propTypes = { \r\n    title : PropTypes.string.isRequired, \r\n    abouttxt : PropTypes.string.isRequired\r\n};\r\n\r\nNavbar.defaultProps = {\r\n    title : \"Set Title Here\",\r\n    abouttxt : 'ABOUT US'\r\n};","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport default function TextForm(props) {\r\n\r\n    // FOR FUNCTIONALITIES\r\n\r\n    const handleOnChange = (event)=>{\r\n        setText(event.target.value);\r\n    }\r\n    \r\n    const handleUpClick = ()=>{\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Text Has Been Converted To UpperCase\",\"success\");\r\n    }\r\n    \r\n    const handleLoClick = ()=>{\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Text Has Been Converted To LowerCase\",\"success\");\r\n    }\r\n    \r\n    const handleClearClick = ()=>{\r\n        let newText = '';\r\n        setText(newText);\r\n        props.showAlert(\"Text Has Been Cleared\",\"warn\");\r\n    }\r\n    \r\n    const handleCopy = ()=>{\r\n        navigator.clipboard.writeText(text);\r\n        props.showAlert(\"Text Has Been Copied\",\"success\");\r\n\r\n    }\r\n    \r\n    const handleRES = ()=>{\r\n        setText(text.split(/\\s+/g).join(\" \"));\r\n        props.showAlert(\"Extra Spaces Fron Text Has Been Removed\",\"success\");\r\n    }\r\n\r\n    const [text, setText] = useState('');\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <h1>{props.heading}</h1>\r\n                <div className=\"utility\" >\r\n                    <textarea name=\"MainText\" value={text} onChange={handleOnChange} id=\"mainText\"rows=\"10\"></textarea>\r\n                    <div className='btnDiv'>\r\n                        <button disabled={text.length === 0} className={`btn ${props.mode}`} onClick={handleUpClick}>UPPERCASE</button>\r\n                        <button disabled={text.length === 0} className={`btn ${props.mode}`} onClick={handleLoClick}>LOWERCASE</button>\r\n                        <button disabled={text.length === 0} className={`btn ${props.mode}`} onClick={handleClearClick}>CLEAR</button>\r\n                        <button disabled={text.length === 0} className={`btn ${props.mode}`} onClick={handleCopy}>COPY</button>\r\n                        <button disabled={text.length === 0} className={`btn ${props.mode}`} onClick={handleRES}>REMOVE EXTRA SPACES</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <h2 className={`center HeadingBack ${props.mode}`}>Your Text Summary.</h2>\r\n                <p className={`justify ${props.mode}`} style = {{color : '#d0adad'}} >{text.trim().split(/\\s+/).filter((element)=>{return element.length !== 0}).length} Words and {text.replace(/\\s/g,\"\").length} characters.</p>\r\n                <p className={`justify ${props.mode}`} style = {{color : '#d0adad'}} >{ (0.008 * text.trim().split(/\\s+/).filter((element)=>{return element.length !== 0}).length).toFixed(2) } Minutes read.</p>\r\n                <h2 className={`center HeadingBack ${props.mode}`}>PREVIEW</h2>\r\n                <p className={`justify ${props.mode}`} style = {{color : '#d0adad'}} >{text.length > 0 ? text : \"Nothing To Preview !\"}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nTextForm.propTypes = {\r\n    heading : PropTypes.string.isRequired\r\n};\r\n\r\nTextForm.defaultProps = {\r\n    heading : 'ENTER TEXT BELOW'\r\n};","import React from \"react\";\r\n\r\nexport default function About(props) {\r\n  return (\r\n    <>\r\n      <div>\r\n        <h1 className={`center HeadingBack ${props.mode}`}>ABOUT US</h1>\r\n        <p className={`info justify ${props.mode}`}>\r\n          We provides free tools to help you with your daily tasks.\r\n          <br />\r\n          You will find tools for formatting source code, converters, tools for\r\n          handling text, such as remove extra spaces, uppercase, lowercase and\r\n          many other.\r\n          <br />\r\n          Check the current feature below and feel free to recommend a new\r\n          feature by contacting us.\r\n          <br />\r\n          Fast, Reliable, and easy!\r\n          <br />\r\n          Text-Utils brings severals free online tools to assist developers in\r\n          daily tasks.\r\n          <br />\r\n        </p>\r\n        <h2 className={`center HeadingBack ${props.mode}`}> OUR FEATURES</h2>\r\n        <ul className={`info justify ${props.mode}`}>\r\n          <li>CONVERT TO UPPERCASE</li>\r\n          <li>CONVERT TO LOWERCASE</li>\r\n          <li>REMOVE EXTRASPACES</li>\r\n          <li>COPY THE TEXT</li>\r\n          <li>CLEAR THE TEXT</li>\r\n        </ul>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n  const close = () => {\r\n    props.setAlert(null);\r\n  };\r\n\r\n  const capitalize = (word) => {\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  };\r\n\r\n  return (\r\n    <div style = {{height : '38px'}}>\r\n      {props.alert && (\r\n        <div className={`alert ${props.alert.type}`}>\r\n          <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n          <button className=\"btn\" onClick={close}>\r\n            <span>X</span>\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Contact(props) {\r\n  return (\r\n    <div>\r\n      <>\r\n        <div>\r\n          <h1 className={`center HeadingBack ${props.mode}`}>CONTACT US</h1>\r\n              <form action=\"/\">\r\n                <div className=\"form-group\">\r\n                  <label className={`${props.mode}`} htmlFor=\"name\">Name: </label>\r\n                  <input className={`${props.mode}`} type=\"text\" name=\"name\" id=\"name\" placeholder=\"Enter your name\"\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label className={`${props.mode}`} htmlFor=\"name\">Locality: </label>\r\n                  <input className={`${props.mode}`} type=\"text\" name=\"Locality\" id=\"Locality\" placeholder=\"Enter your Locality\"/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label className={`${props.mode}`} htmlFor=\"name\">Email: </label>\r\n                  <input className={`${props.mode}`} type=\"text\" name=\"Email\" id=\"Email\" placeholder=\"Enter your Email\"/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label className={`${props.mode}`} htmlFor=\"name\">Phone Number: </label>\r\n                  <input className={`${props.mode}`} type=\"text\" name=\"Phone Number\" id=\"Phone Number\" placeholder=\"Enter your Phone Number\"/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label className={`${props.mode}`} htmlFor=\"name\">Message: </label>\r\n                  <textarea className={`${props.mode}`} name=\"message\" id=\"message\" cols=\"30\" rows=\"10\"></textarea>\r\n                </div>\r\n                  <button className={`subBtn ${props.mode}`} style= {{margin:'auto'}} >SUBMIT</button>\r\n              </form>\r\n        </div>\r\n      </>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Footer(props) {\r\n    return (\r\n        <div className={`footer ${props.mode}`}>\r\n             Copyright &copy; www.TextUtils_Shiv.com. All rights reserved!\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from \"react\";\nimport \"./style.css\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport About from \"./components/About\";\nimport Alert from \"./components/Alert\";\nimport Contact from \"./components/Contact\";\n\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Footer from \"./components/Footer\";\n\nfunction App() {\n  \n  //MODES HENDLING\n\n  const [mode, setMode] = useState(\"light\");\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"black\";\n      showAlert(\"Dark Mode Has Been Enabled\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode Has Been Enabled\", \"success\");\n    }\n  };\n\n  // ALERTS\n\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  return (\n    <BrowserRouter>\n      <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} setAlert={setAlert} />\n      <div className=\"container\">\n        <Routes>\n          <Route exact\n            path=\"/\"\n            element={\n              <TextForm\n              showAlert={showAlert}\n              mode={mode}\n              heading=\"TRY TEXTUTILS - WORD COUNTER | CHARACTER COUNTER | REMOVE EXTRA SPACES ...\"\n              />\n            }\n          />\n          <Route exact path=\"/About\" element={<About mode={mode} />} />\n          <Route exact path=\"/Contact\" element={<Contact mode={mode} />} />\n        </Routes>\n      </div>\n      <Footer mode={mode}/>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();"],"sourceRoot":""}